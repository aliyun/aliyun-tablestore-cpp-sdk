# -*- python -*-
import os
import subprocess as sp
import os.path as op
Import('env')

env = env.Clone()

def compile_pb(target, source, env):
    assert len(source) == 1
    base = op.dirname(source[0].abspath)
    sp.check_call('protoc --cpp_out=. %s' % op.basename(source[0].path),
                  cwd=base, shell=True)
    return None

def tablestore_emitter(target, source, env):
    target = [env.File(x) for x in ['table_store.pb.cc', 'table_store.pb.h']]
    return target, source

def filter_emitter(target, source, env):
    target = [env.File(x) for x in ['table_store_filter.pb.cc',
                                    'table_store_filter.pb.h']]
    return target, source

env.Append(BUILDERS={
    'TableStoreProtoc': Builder(action=compile_pb,
                                emitter=tablestore_emitter),
    'FilterProtoc': Builder(action=compile_pb,
                            emitter=filter_emitter)})

env.TableStoreProtoc('table_store.proto')
env.FilterProtoc('table_store_filter.proto')

objs = env.Object(['table_store.pb.cc', 'table_store_filter.pb.cc'])
Return('objs')

